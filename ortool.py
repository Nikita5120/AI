# -*- coding: utf-8 -*-
"""ORTool.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qKy2hGQbzd_D-j7byM67oio5d_SI0Dy1
"""

!pip install ortools

from ortools.sat.python import cp_model

# Create the model
model = cp_model.CpModel()

# Define variables for each letter, each variable is an integer between 0 and 9
S = model.NewIntVar(0, 9, 'S')
E = model.NewIntVar(0, 9, 'E')
N = model.NewIntVar(0, 9, 'N')
D = model.NewIntVar(0, 9, 'D')
M = model.NewIntVar(0, 9, 'M')
O = model.NewIntVar(0, 9, 'O')
R = model.NewIntVar(0, 9, 'R')
Y = model.NewIntVar(0, 9, 'Y')

# Create a list of all the variables
variables = [S, E, N, D, M, O, R, Y]

# Constraint 1: All letters must be different
model.AddAllDifferent(variables)

# Constraint 2: SEND + MORE = MONEY
# We convert the words to numbers by treating them as base-10 numbers
model.Add(S * 1000 + E * 100 + N * 10 + D +
          M * 1000 + O * 100 + R * 10 + E ==
          M * 10000 + O * 1000 + N * 100 + E * 10 + Y)

# Create the solver
solver = cp_model.CpSolver()

# Solve the model
status = solver.Solve(model)

# Print the solution
if status == cp_model.OPTIMAL or status == cp_model.FEASIBLE:
    print("Solution found:")
    print(f"S = {solver.Value(S)}")
    print(f"E = {solver.Value(E)}")
    print(f"N = {solver.Value(N)}")
    print(f"D = {solver.Value(D)}")
    print(f"M = {solver.Value(M)}")
    print(f"O = {solver.Value(O)}")
    print(f"R = {solver.Value(R)}")
    print(f"Y = {solver.Value(Y)}")
else:
    print("No solution found.")

